name: Dependency graph Docker in Actions

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: zerosource/dojo-s3import-github-ddt
      env:
        LAMBDA_URL: ${{ secrets.LAMBDA_URL }}
        APP_ID: ${{ secrets.APP_ID_SEMGREP }}
        
    steps:
    - uses: actions/checkout@v2

    - name: Run Commands inside Docker Container. Get dg alert if enabled
      run: |
        # fetch the dependency graph SPDX SBOM JSON file
        curl -L -o $GITHUB_WORKSPACE/dg-sbom.json \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/${{ github.repository }}/dependency-graph/sbom

        echo "check if file saved"
        ls -lah $GITHUB_WORKSPACE

        # parsing the fetched SBOM JSON file and transforming it into SPDX SBOM format so trivy can process
        cat $GITHUB_WORKSPACE/dg-sbom.json | jq '.sbom' > $GITHUB_WORKSPACE/sbom.json
        sed -i -e '${/^$/d;}' $GITHUB_WORKSPACE/sbom.json

        # modify the SPDX JSON into DD generic finding format
        jq -c ' {findings: [ .packages[] |{
          title: "\(.name) \(.versionInfo)",
          active: true,
          verified: true,
          description: "N/A",
          severity: "Info",
          mitigation: "N/A",
          date: "2024-04-22",
          cve: 0,
          cwe: 0,
          cvssv3: "N/A",
          file_path: null,
          line: 11,
          "vuln_id_from_tool": .SPDXID,
        }]}' $GITHUB_WORKSPACE/sbom.json > $GITHUB_WORKSPACE/sbom_generic.json

        # Check SBOM file
        echo "checking report" 
        ls -lah $GITHUB_WORKSPACE
        echo "uploading file"
        upload-results-s3.sh $RUNNER_TEMP/sbom_generic.json

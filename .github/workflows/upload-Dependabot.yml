name: Dependabot Docker in Actions

on: push

jobs:
  build:
    runs-on: ubuntu-latest
    container: 
      image: zerosource/dojo-s3import-github-ddt
      env:
        LAMBDA_URL: ${{ secrets.LAMBDA_URL }}
        APP_ID: ${{ secrets.APP_ID_SEMGREP }}
        
    steps:
    - uses: actions/checkout@v2

    - name: Generate IAT from Github App for the current repository
      uses: actions/create-github-app-token@c4fa18d55c5d49e6a2793e351ea4938322c61072 #v1
      id: app-token
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.PRIVATE_KEY }}

    - name: Run Commands inside Docker Container. Get dependabot alert if enabled
      run: |
        # fetch dependabot alerts result 
        echo "get json"
        curl --request GET -L -o $GITHUB_WORKSPACE/dependabot-results.json \
        -H "Accept: application/vnd.github+json" \
        -H "Authorization: Bearer ${{ steps.app-token.outputs.token }}" \
        -H "X-GitHub-Api-Version: 2022-11-28" \
        https://api.github.com/repos/${{ github.repository }}/dependabot/alerts
        
        echo "check if file saved"
        ls -lah $GITHUB_WORKSPACE

        # modify the dependabot JSON into DD generic finding format
        echo "transform to generic report format"
        jq -c ' {findings:  map({
          title: "\(.dependency.package.ecosystem):\(.security_vulnerability.package.name) \(.security_vulnerability.vulnerable_version_range)",
          active: true,
          verified: true,
          description: .security_advisory.description,
          severity: (.security_advisory.severity | ascii_upcase[:1] + ascii_downcase[1:]),
          mitigation: "N/A",
          date: "2024-04-22",
          cve: .security_advisory.cve_id,
          cwe: (.security_advisory.cwes[].cwe_id // "" | sub("CWE-"; "") | tonumber),
          cvssv3: .security_advisory.cvss.vector_string,
          file_path: .dependency.manifest_path,
          line: 11
        })}' $GITHUB_WORKSPACE/dependabot-results.json > $GITHUB_WORKSPACE/dependabot-result-generic.json
        
        echo "checking the file"
        ls -lah $GITHUB_WORKSPACE
        echo "uploading file"
        upload-results-s3.sh $RUNNER_TEMP/dependabot-result-generic.json

